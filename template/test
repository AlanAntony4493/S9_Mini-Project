# parish directory

from django.shortcuts import render, redirect
from .models import PrayerGroup, ParishDirectory
from django.db import IntegrityError

def parish_admin(request):
    error_message = None

    if request.method == 'POST':
        if 'new_group_name' in request.POST:
            new_group_name = request.POST.get('new_group_name')
            if new_group_name:
                try:
                    PrayerGroup.objects.create(name=new_group_name)
                except IntegrityError:
                    error_message = "A prayer group with this name already exists."
        else:
            name = request.POST.get('funame')
            house_name = request.POST.get('Hname')
            contact = request.POST.get('mob')
            prayer_group_id = request.POST.get('prayer_group')
            if name and house_name and contact and prayer_group_id:
                prayer_group = PrayerGroup.objects.get(pk=prayer_group_id)
                ParishDirectory.objects.create(
                    name=name,
                    house_name=house_name,
                    contact=contact,
                    prayer_group=prayer_group
                )
    elif request.method == 'GET':
        if 'soft_delete_group' in request.GET:
            group_id = request.GET.get('soft_delete_group')
            try:
                group = PrayerGroup.objects.get(pk=group_id)
                group.is_deleted = True
                group.save()
            except PrayerGroup.DoesNotExist:
                error_message = "The selected prayer group does not exist."
        elif 'soft_delete_member' in request.GET:
            member_id = request.GET.get('soft_delete_member')
            try:
                member = ParishDirectory.objects.get(pk=member_id)
                member.is_deleted = True
                member.save()
            except ParishDirectory.DoesNotExist:
                error_message = "The selected parish member does not exist."

    prayer_groups = PrayerGroup.objects.filter(is_deleted=False)
    parish_members = ParishDirectory.objects.select_related('prayer_group').filter(is_deleted=False)

    return render(request, 'parish_admin.html', {'prayer_groups': prayer_groups, 'parish_members': parish_members, 'error_message': error_message})



{% load static %}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>SMYM Mukkoottuthara</title>
    <meta content="" name="description">
    <meta content="" name="keywords">
    <link href="{% static 'img/logo1.png' %}" rel="icon">
    <link href="{% static 'img/logo1.png' %}" rel="apple-touch-icon">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <link href="{% static 'vendor/aos/aos.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/bootstrap/css/bootstrap.min.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/bootstrap-icons/bootstrap-icons.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/boxicons/css/boxicons.min.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/glightbox/css/glightbox.min.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/remixicon/remixicon.css' %}" rel="stylesheet">
    <link href="{% static 'vendor/swiper/swiper-bundle.min.css' %}" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="{% static 'css/style.css' %}" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="{% static 'css/custom.css' %}" rel="stylesheet">

    <!-- JavaScript Files -->
    <script src="{% static 'js/validation.js' %}"></script>
  <style>
    /* Default styles for larger screens */
    table {
      width: 90%;
      border-collapse: collapse;
      border-spacing: 0;
      margin-left: 40px;
      margin-right: 40px;
      margin-bottom: 40px;
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    th, td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
    
    th {
      background-color: #007BFF;
      {% comment %} color: #fff; {% endcomment %}
    }
    
    tr:hover {
      background-color: #f5f5f5;
    }
    
    /* Media query for screens with a max width of 600px (small screens) */
    @media screen and (max-width: 600px) {
      table {
        width: 90%; /* Make the table take up the full width of the screen */
        margin-left: 20px; /* Remove the left margin on smaller screens */
      }
    
      /* Hide the table header on small screens */
      table thead {
        display: none;
      }
    
      /* Adjust the table rows and cells for small screens */
      table tbody tr {
        margin-bottom: 10px;
        display: block;
        border: 1px solid #000; /* Dark border for rows */
        border-radius: 5px;
      }
    
      table tbody td {
        display: block;
        text-align: center;
        border-bottom: 1px solid #ddd; /* Light border for columns */
        padding-left: 0; /* Remove left padding to use the full width */
        position: relative;
      }
    
      table tbody td:before {
        content: attr(data-th);
        position: absolute;
        left: 10px; /* Adjust the left padding for heading */
        width: 40%; /* Adjust the width of the heading */
        padding-right: 10px; /* Add right padding to the heading */
        white-space: nowrap;
      }
    }
  {% comment %} form css {% endcomment %}
  
  .container1 {
    max-width: 400px; /* Reduce the max-width to make the form smaller */
    margin: 0;
    padding: 20px;
    margin-top: 50px;
    background-color:#e6f7ff; /* Darker color code */
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    margin-left: 50px; /* Add left margin of 50px */
}
  /* Style form labels and inputs */
  .form-group {
      margin-bottom: 15px; /* Reduce the margin to make the form smaller */
  }
  
  label {
      display: block;
      font-weight: bold;
  }
  
  input[type="text"],
  input[type="number"],
  select {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 16px;
  }
  
  /* Style radio buttons in a single line */
  .form-group.radio-group label {
      display: inline-block;
      margin-right: 15px; /* Add space between radio buttons */
  }
  
  /* Style submit button */
  .btn {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      display: block;
      margin: 0 auto;
  }
  .error{
    color: red;
    font-size: smaller;
  }
  h2{
    margin-left:40px;
  }

  /* CSS for the filter container */
.filter-container {
    max-width: 200px;
    margin: 20px 20px 20px 40px;
    float: left;
}

.filter-container p {
    font-weight: bold;
    margin-bottom: 5px;
}

.filter-container .form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
}

/* Style for the selected option in the filter dropdown */
.filter-container .form-group select option[selected] {
    font-weight: bold;
    color: #007BFF; /* Change the color to your preference */
    background-color: #f2f2f2; /* Change the background color to your preference */
}

/* Style for the hover effect on options in the filter dropdown */
.filter-container .form-group select option:hover {
    background-color: #007BFF; /* Change the background color on hover to your preference */
    color: #fff; /* Change the text color on hover to your preference */
}

/* Style for the disabled option in the filter dropdown */
.filter-container .form-group select option[disabled] {
    color: #ccc;
}
section {
  padding: 19px 0;
  overflow: hidden;
}
/* Custom CSS for the Delete Button */
.delete-button {
    display: inline-block;
    padding: 10px 20px;
    background-color: #ff0000; /* Red background color */
    color: #ffffff; /* White text color */
    border: none;
    border-radius: 5px;
    text-decoration: none;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s ease;
}

/* Hover effect */
.delete-button:hover {
    background-color: #cc0000; /* Darker red on hover */
}

  </style>

</head>

<body>

        <!-- ======= Header ======= -->
        <header id="header" class="fixed-top header-inner-pages">
          <div class="container d-flex align-items-center justify-content-lg-between">
      
            <!-- <h1 class="logo me-auto me-lg-0"><a href="index.html">Gp<span>.</span></a></h1> -->
            <!-- Uncomment below if you prefer to use an image logo -->
            <a href="{% url 'index' %}" class="logo me-auto me-lg-0"><img src="{% static 'img/logonew.png' %}" alt="SMYM" class="img-fluid" style="height:100px"></a>
      
            <nav id="navbar" class="navbar order-last order-lg-0">
              <ul>
                <li><a class="nav-link scrollto active" href="{% url 'index' %}">Home</a></li>
                <li class="dropdown"><a href=""><span>About Us</span> <i class="bi bi-chevron-down"></i></a>
                  <ul>
                    <li><a href="{% url 'index' %}#about">SMYM Mukkoottuthara</a></li>
                    <li class="dropdown"><a href="{% url 'by_law' %}"><span>SMYM BY Law</span> <i class="bi bi-chevron-right"></i></a>
                      <!-- <ul>
                        <li><a href="#">SMYM-LOGO</a></li>
                        <li><a href="#">SMYM-FLAG</a></li>
                        <li><a href="#">SMYM-ANTHEM</a></li>
                        <li><a href="#">SMYM-SLOGAN</a></li>
                      </ul> -->
                    </li>
                    <!-- <li><a href="#">Drop Down 2</a></li>
                    <li><a href="#">Drop Down 3</a></li>
                    <li><a href="#">Drop Down 4</a></li> -->
                  </ul>
                </li>
                <ul>
                  <li><a class="nav-link scrollto" href="">Gallery</a></li>
                  <li><a class="nav-link scrollto" href="{% url 'index' %}#contact">Contact</a></li>
                  <li><a class="nav-link scrollto" href="{% url 'index' %}#services">Services</a></li>
                  {% if user.is_superuser %}
                      <li><a class="nav-link scrollto" href="{% url 'user_admin' %}">Users</a></li>
                      <li><a class="nav-link scrollto" href="{% url 'logout' %}?next=/">Log Out ({{ user.username }})</a></li>
                  {% elif user.is_authenticated %}
                      <li><a class="nav-link scrollto" href="{% url 'logout' %}?next=/">Log Out ({{ user.first_name }})</a></li>
                  {% else %}
                      <li><a class="nav-link scrollto" href="{% url 'login' %}">Log In</a></li>
                  {% endif %}
      
              </ul>
              
              <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
      
            <a href="#about" class="get-started-btn scrollto">Support Us</a>
      
          </div>
   </header><!-- End Header -->

  <main id="main">
    {% if user.is_superuser %}
    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
      <div class="container">
        <div class="d-flex justify-content-between align-items-center">
          <h2 style="align:center">Parish Directory And Prayer Groups</h2>
        </div>
      </div>
    </section>
    <!-- End Breadcrumbs -->
    {% endif %}
 
    <div class="container">
      {% if user.is_superuser %}
  <!-- ======= Breadcrumbs ======= -->
  <section class="breadcrumbs">
    <div class="container">
      <div class="d-flex justify-content-between align-items-center">
        <h2 style="align:center">Manage Prayer Groups</h2>
      </div>
    </div>
  </section>
  <!-- End Breadcrumbs -->
        <!-- Prayer Groups -->
        <section id="prayer-groups">
            <table class="table">
                <thead class="table-primary">
                    <tr>
                        <th>Serial Number</th>
                        <th>Group Name</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    {% for group in prayer_groups %}
                    <tr>
                        <td>{{ forloop.counter }}</td>
                        <td>{{ group.name }}</td>
                        <td>
                          <a href="?soft_delete_group={{ group.id }}" class="delete-button" onclick="return confirmDelete();">Delete</a>
                      </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>

            <!-- Add New Prayer Group Form -->
            <div class="container1">
                <h3>Add New Prayer Group</h3>
                {% if error_message %}
                  <p id="error_message">{{error_message}}</p>
                {% endif %}
                
                <form method="post" action="{% url 'parish_admin' %}">
                  {% csrf_token %}
                  <div class="form-group">
                      <label for="new_group_name">New Prayer Group:</label>
                      <input type="text" id="new_group_name" name="new_group_name" required oninput="validateGroupName()">
                      <span id="group_name_error" class="text-danger"></span>
                  </div>
                  <div class="form-group">
                      <input type="submit" value="Add Prayer Group" class="btn btn-primary" id="submit_button" disabled>
                  </div>
              </form>
            </div>
        </section>
    {% endif %}

        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
          <div class="container">
            <div class="d-flex justify-content-between align-items-center">
              <h2 style="align:center">Parish Directory</h2>
            </div>
          </div>
        </section>
        <!-- End Breadcrumbs -->
      <section style="margin-bottom: 0px !important;">
        <div class="filter-container" style="max-width: 200px; margin-bottom:0; float: left;">
          <p>Filter by Prayer Group</p>
          <div class="form-group">
              <select id="filter-prayer-group-select" onchange="filterParishDirectory()">
                  <option value="" selected>Show All</option>
                  {% for group in prayer_groups %}
                      <option value="{{ group.name }}">{{ group.name }}</option>
                  {% endfor %}
              </select>
          </div>
      </div>
      </section>
      <!-- Parish Directory -->
      <section id="parish-directory" style="margin-top:0px !important;">
          <table class="table">
              <thead class="table-primary">
                  <tr>
                      <th>Serial Number</th>
                      <th>Name</th>
                      <th>House Name</th>
                      <th>Contact</th>
                      <th>Prayer Group</th>
                      <th>Action</th>
                  </tr>
              </thead>
              <tbody id="parish-directory-table">
                  {% for member in parish_members %}
                  <tr>
                      <td>{{ forloop.counter }}</td>
                      <td>{{ member.name }}</td>
                      <td>{{ member.house_name }}</td>
                      <td>{{ member.contact }}</td>
                      <td>{{ member.prayer_group.name }}</td>
                      <td>
                        <a href="?soft_delete_member={{ member.id }}" class="delete-button" onclick="return confirmDelete();">Delete</a>
                    </td>
                  </tr>
                  {% endfor %}
                  <tr id="no-results" style="display: none;">
                    <td colspan="5">Sorry,no members of the selected prayer gorup is found</td>
                  </tr>
              </tbody>
          </table>

          <!-- Add New Member Form -->
          {% if user.is_superuser %}
          <!-- ======= Breadcrumbs ======= -->
          <section class="breadcrumbs">
            <div class="container">
              <div class="d-flex justify-content-between align-items-center">
                <h2 style="align:center">Manage Parish Directory</h2>
              </div>
            </div>
          </section>
      <!-- End Breadcrumbs -->
          <div class="container1">
              <h3>Add Member to Parish Directory</h3>
              <form method="post" action="{% url 'parish_admin' %}"enctype="multipart/form-data" onsubmit="validateAllInput(event)" id="directory">
                  {% csrf_token %}
                  <div class="form-group">
                      <label for="name">Name:</label>
                      <input type="text" class="form-control" id="funame" name="funame" oninput="validateFullname()" required>
                      <p class="error" id="fun"></p>
                  </div>
                  <div class="form-group">
                      <label for="house_name">House Name:</label>
                      <input type="text" class="form-control" id="Hname" name="Hname" oninput="validateHousename()" required>
                      <p class="error" id="Hn"></p>
                  </div>
                  <div class="form-group">
                      <label for="contact">Contact:</label>
                      <input type="text" class="form-control" id="mob" name="mob" oninput="validatePhone()" required required>
                      <p class="error" id="ph"></p>
                  </div>
                  <div class="form-group">
                      <label for="prayer_group">Prayer Group:</label>
                      <select id="prayer_group" name="prayer_group" required>
                          <option value="" disabled selected>--- Select Prayer Group ---</option>
                          {% for group in prayer_groups %}
                          <option value="{{ group.id }}">{{ group.name }}</option>
                          {% endfor %}
                      </select>
                  </div>
                  <div class="form-group">
                      <input type="submit" value="Add Member" class="btn btn-primary">
                  </div>
              </form>
          </div>
      </section>
      {% endif %}
  </div>
</main><!-- End #main -->

  <!-- ======= Footer ======= -->
  <footer id="footer">
    <div class="footer-top">
      <div class="container">
        <div class="row">

          <div class="col-lg-3 col-md-6">
            <div class="footer-info">
              <h3><img src="{% static 'img/logo1.png' %}" style="height:90px; width:80px;"></h3>
              <p>
                St Thomas Church <br>
                Mukkoottuthara,<br>
                PIN: 686510<br><br>
                <strong>Phone:</strong> +91 8078529691<br>
                <strong>Email:</strong> smymmukkoottuthara@gmail.com<br>
              </p>
              <div class="social-links mt-3">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="https://www.facebook.com/SMYM.Mukkoottuthara" class="facebook" target="_blank"><i class="bx bxl-facebook"></i></a>
                <a href="https://www.instagram.com/smymmukkoottuthara/" class="instagram" target="_blank"><i class="bx bxl-instagram"></i></a>
                {% comment %} <a href="#" target="blank" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a> {% endcomment %}
              </div>
            </div>
          </div>

          <div class="col-lg-2 col-md-6 footer-links">
            <h4>Useful Links</h4>
            <ul>
              <li><i class="bx bx-chevron-right"></i> <a href="{% url 'index' %}#">Home</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="{% url 'index' %}#about">About us</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="{% url 'index' %}#services">Services</a></li>
              <!-- <li><i class="bx bx-chevron-right"></i> <a href="#">Terms of service</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="#">Privacy policy</a></li> -->
            </ul>
          </div>

          <div class="col-lg-3 col-md-6 footer-links">
            <h4>Our Services</h4>
            <ul>
              <li><i class="bx bx-chevron-right"></i> <a href="#">Parish Directory</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="{% url 'blood_admin' %}">Blood Bank</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="{% url 'event' %}">Upcoming Events</a></li>
              <li><i class="bx bx-chevron-right"></i> <a href="#">Help</a></li>
              <!-- <li><i class="bx bx-chevron-right"></i> <a href="#">Graphic Design</a></li> -->
            </ul>
          </div>


        </div>
      </div>
    </div>

  </footer><!-- End Footer -->

<div id="preloader"></div>
<a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

<!-- Vendor JS Files -->

<!-- Template Main JS File -->
<script>
  function filterParishDirectory() {
    var prayerGroup = document.getElementById("filter-prayer-group-select").value;
    var tbody = document.getElementById("parish-directory-table");
    var rows = tbody.getElementsByTagName("tr");
    var noResultsRow = document.getElementById("no-results");

    // Assume no results initially
    var hasResults = false;

    for (var i = 0; i < rows.length; i++) {
        var row = rows[i];
        var cells = row.getElementsByTagName("td");

        if (cells.length >= 5) {  // Ensure there's a cell with prayer group data (5th column)
            var cell = cells[4];  // 5th column (Prayer Group)

            if (prayerGroup === "" || cell.innerHTML === prayerGroup) {
                row.style.display = "";  // Show the row
                hasResults = true;      // Mark that results were found
            } else {
                row.style.display = "none";  // Hide the row
            }
        }
    }

    // Show or hide the "No results" message based on whether results were found
    noResultsRow.style.display = hasResults ? "none" : "";
}
</script>
<script>
  function confirmDelete() {
      // Display a confirmation dialog
      var confirmResult = confirm("Do you want to delete this item?");
      
      // If the user clicks "OK," proceed with the soft delete
      if (confirmResult) {
          return true; // Allow the link to navigate
      } else {
          return false; // Cancel the link action
      }
  }
  </script>

  
<script>
  // Regular expression for validation
  var nameRegex = /^(?!\s)[A-Za-z\s]+(?<!\s)$/;

  function validateGroupName() {
      var groupNameInput = document.getElementById("new_group_name");
      var groupNameError = document.getElementById("group_name_error");
      var submitButton = document.getElementById("submit_button");

      if (nameRegex.test(groupNameInput.value)) {
          groupNameError.textContent = ""; // Clear the error message
          submitButton.disabled = false; // Enable the submit button
      } else {
          groupNameError.textContent = "Invalid group name"; // Display error message
          submitButton.disabled = true; // Disable the submit button
      }
  }
</script>
<script src="{% static 'js/main.js' %}"></script>
</body>

</html>






# parish directory

from django.urls import reverse
from django.http import HttpResponseRedirect
from django.shortcuts import render, redirect, get_object_or_404
from django.db import IntegrityError
from .models import PrayerGroup, ParishDirectory

def parish_admin(request):
    error_message = None

    if request.method == 'POST':
        if 'new_group_name' in request.POST:
            new_group_name = request.POST.get('new_group_name')
            if new_group_name:
                try:
                    PrayerGroup.objects.create(name=new_group_name)
                except IntegrityError:
                    error_message = "A prayer group with this name already exists."
        else:
            form_name = request.POST.get('name')
            form_house_name = request.POST.get('house_name')
            form_contact = request.POST.get('contact')
            prayer_group_id = request.POST.get('prayer_group')

            if form_name and form_house_name and form_contact and prayer_group_id:
                prayer_group = PrayerGroup.objects.get(pk=prayer_group_id)
                ParishDirectory.objects.create(
                    name=form_name,
                    house_name=form_house_name,
                    contact=form_contact,
                    prayer_group=prayer_group
                )

    elif request.method == 'GET':
        if 'soft_delete_group' in request.GET:
            group_id = request.GET.get('soft_delete_group')
            try:
                group = PrayerGroup.objects.get(pk=group_id)
                group.is_deleted = True
                group.save()

                # Soft delete all related Parish Members
                ParishDirectory.objects.filter(prayer_group=group).update(is_deleted=True)

            except PrayerGroup.DoesNotExist:
                error_message = "The selected prayer group does not exist."

            # Redirect back to the parish_admin page after group deletion
            return HttpResponseRedirect(reverse('parish_admin'))

        elif 'soft_delete_member' in request.GET:
            member_id = request.GET.get('soft_delete_member')
            try:
                member = ParishDirectory.objects.get(pk=member_id)
                member.is_deleted = True
                member.save()

            except ParishDirectory.DoesNotExist:
                error_message = "The selected parish member does not exist."

            # Redirect back to the parish_admin page after member deletion
            return HttpResponseRedirect(reverse('parish_admin'))

    prayer_groups = PrayerGroup.objects.filter(is_deleted=False)
    parish_members = ParishDirectory.objects.select_related('prayer_group').filter(is_deleted=False)

    return render(request, 'parish_admin.html', {'prayer_groups': prayer_groups, 'parish_members': parish_members, 'error_message': error_message})




    # parish directory

from django.urls import reverse
from django.http import HttpResponseRedirect
from django.shortcuts import render, redirect, get_object_or_404
from django.db import IntegrityError
from .models import PrayerGroup, ParishDirectory

def parish_admin(request):
    error_message = None

    if request.method == 'POST':
        if 'new_group_name' in request.POST:
            new_group_name = request.POST.get('new_group_name')
            if new_group_name:
                try:
                    PrayerGroup.objects.create(name=new_group_name)
                except IntegrityError:
                    error_message = "A prayer group with this name already exists."
        else:
            form_name = request.POST.get('name')
            form_house_name = request.POST.get('house_name')
            form_contact = request.POST.get('contact')
            prayer_group_id = request.POST.get('prayer_group')

            if form_name and form_house_name and form_contact and prayer_group_id:
                prayer_group = PrayerGroup.objects.get(pk=prayer_group_id)
                ParishDirectory.objects.create(
                    name=form_name,
                    house_name=form_house_name,
                    contact=form_contact,
                    prayer_group=prayer_group
                )

    elif request.method == 'GET':
        if 'soft_delete_group' in request.GET:
            group_id = request.GET.get('soft_delete_group')
            try:
                group = PrayerGroup.objects.get(pk=group_id)
                group.is_deleted = True
                group.save()

                # Soft delete all related Parish Members
                ParishDirectory.objects.filter(prayer_group=group).update(is_deleted=True)

            except PrayerGroup.DoesNotExist:
                error_message = "The selected prayer group does not exist."

            # Redirect back to the parish_admin page after group deletion
            return HttpResponseRedirect(reverse('parish_admin'))

        elif 'soft_delete_member' in request.GET:
            member_id = request.GET.get('soft_delete_member')
            try:
                member = ParishDirectory.objects.get(pk=member_id)
                member.is_deleted = True
                member.save()

            except ParishDirectory.DoesNotExist:
                error_message = "The selected parish member does not exist."

            # Redirect back to the parish_admin page after member deletion
            return HttpResponseRedirect(reverse('parish_admin'))

    prayer_groups = PrayerGroup.objects.filter(is_deleted=False)
    parish_members = ParishDirectory.objects.select_related('prayer_group').filter(is_deleted=False)

    return render(request, 'parish_admin.html', {'prayer_groups': prayer_groups, 'parish_members': parish_members, 'error_message': error_message})
